// Code generated by mockery v2.53.3. DO NOT EDIT.

package dao

import (
	model "github.com/gavinklfong/go-forex-trade-api/model"
	mock "github.com/stretchr/testify/mock"
)

// MockForexPricingDao is an autogenerated mock type for the ForexPricingDao type
type MockForexPricingDao struct {
	mock.Mock
}

type MockForexPricingDao_Expecter struct {
	mock *mock.Mock
}

func (_m *MockForexPricingDao) EXPECT() *MockForexPricingDao_Expecter {
	return &MockForexPricingDao_Expecter{mock: &_m.Mock}
}

// GetPricingByCurrencyPair provides a mock function with given fields: base, counter
func (_m *MockForexPricingDao) GetPricingByCurrencyPair(base string, counter string) *model.ForexPricing {
	ret := _m.Called(base, counter)

	if len(ret) == 0 {
		panic("no return value specified for GetPricingByCurrencyPair")
	}

	var r0 *model.ForexPricing
	if rf, ok := ret.Get(0).(func(string, string) *model.ForexPricing); ok {
		r0 = rf(base, counter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ForexPricing)
		}
	}

	return r0
}

// MockForexPricingDao_GetPricingByCurrencyPair_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPricingByCurrencyPair'
type MockForexPricingDao_GetPricingByCurrencyPair_Call struct {
	*mock.Call
}

// GetPricingByCurrencyPair is a helper method to define mock.On call
//   - base string
//   - counter string
func (_e *MockForexPricingDao_Expecter) GetPricingByCurrencyPair(base interface{}, counter interface{}) *MockForexPricingDao_GetPricingByCurrencyPair_Call {
	return &MockForexPricingDao_GetPricingByCurrencyPair_Call{Call: _e.mock.On("GetPricingByCurrencyPair", base, counter)}
}

func (_c *MockForexPricingDao_GetPricingByCurrencyPair_Call) Run(run func(base string, counter string)) *MockForexPricingDao_GetPricingByCurrencyPair_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockForexPricingDao_GetPricingByCurrencyPair_Call) Return(_a0 *model.ForexPricing) *MockForexPricingDao_GetPricingByCurrencyPair_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockForexPricingDao_GetPricingByCurrencyPair_Call) RunAndReturn(run func(string, string) *model.ForexPricing) *MockForexPricingDao_GetPricingByCurrencyPair_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockForexPricingDao creates a new instance of MockForexPricingDao. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockForexPricingDao(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockForexPricingDao {
	mock := &MockForexPricingDao{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
